- Reactivity : 데이터 변화를 즉시 화면에반영(화면조작API 및 속성 등을 통해)

- 인스턴스 : 개발시, 필수로 생성해야하는 단위

- 컴포넌트 : 재사용성을 높이기 위해, 화면을 쪼개서 개발하는 단위 (최신 FE 기술들은 컴포넌트 개발이 핵심이다.)

- 컴포넌트 통신 : 컴포넌트 간 데이터 및 이벤트를 주고받는것.
    - props : 상위 -> 하위
    - event $emit : 하위 -> 상위

- HTTP 통신 라이브러리(axios) : (vue-resource를 대체하는)Vue에서 권장하는 HTTP 라이브러리

- 템플릿 문법 : 템플릿 코드(HTML) 안에서 데이터 바인딩이나, 이벤트 처리를 더 간편하게 할 수 있도록 Vue에서 제공하는 문법
    - 데이터 바인딩 : 데이터의 변화를 화면에 반영하는 것
    - 뷰 디렉티브 : 화면을 조작하기 위해, Vue에서 추가적으로 제공하는 문법(v-bind, v-on 등등)

- Vue CLI : CLI를 기반으로하여, 명령어로 프로젝트를 생성할 수 있도록 도와주는 프로그램

- 싱글 파일 컴포넌트 : vue-loader가 .vue 파일을 찢어서 브라우저가 이해할 수 있는 형태로 변환시킴
                     (Webpack에서 vue-loader를 이용하여 vue를 변환시킴)